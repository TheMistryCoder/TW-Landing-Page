/* Global scroll offset for anchor links under fixed header */
html {
	scroll-padding-top: 5rem;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* ===================== COMPONENTS ===================== */
@layer components {
	:root[data-theme="light"] .glass-primary {
		@apply bg-white/90;
	}
	:root[data-theme="dark"] .glass-primary {
		@apply bg-surfaceDeep/85;
	} /* requires surfaceDeep in tailwind.config */

	:root[data-theme="light"] .text-primary {
		@apply text-slate-900;
	}
	:root[data-theme="dark"] .text-primary {
		@apply text-slate-200;
	}

	:root[data-theme="light"] .border-primary {
		@apply border-slate-200;
	}
	:root[data-theme="dark"] .border-primary {
		@apply border-zinc-900;
	}

	/* Logo swap */
	.logo-light {
		display: inline;
	}
	.logo-dark {
		display: none;
	}
	:root[data-theme="dark"] .logo-light {
		display: none;
	}
	:root[data-theme="dark"] .logo-dark {
		display: inline;
	}

	@layer components {
		/* Base: semibold so hover does not shift layout */
		.nav-link {
			@apply font-semibold text-slate-900/50 dark:text-white/50 transition-colors duration-150 no-underline;
		}

		/* Hover/focus: only increase colour, not weight */
		.nav-link:hover,
		.nav-link:focus-visible {
			@apply text-slate-900 dark:text-white;
		}

		/* Active: full colour, already semibold */
		.nav-link[aria-current="page"] {
			@apply text-slate-900 dark:text-white;
		}

		/* Accessible focus outline */
		.nav-link:focus-visible {
			@apply outline-2 outline-offset-2 rounded outline-slate-300 dark:outline-slate-600;
		}
	}
}

/* ===== Swap toggle (Daisy-style) ===== */
@layer components {
	.swap {
		position: relative;
		display: inline-grid;
		place-items: center;
		cursor: pointer;
	}

	/* Visually hide checkbox, keep it accessible */
	.swap > input[type="checkbox"] {
		position: absolute;
		inset: 0;
		width: 100%;
		height: 100%;
		opacity: 0;
		appearance: none;
		cursor: pointer;
	}

	/* Base state: show "off" icon, hide "on" icon */
	.swap .swap-off,
	.swap .swap-on {
		transition: transform 200ms ease, opacity 200ms ease;
		transform-origin: 50% 50%;
	}
	.swap .swap-off {
		opacity: 1;
	}
	.swap .swap-on {
		opacity: 0;
	}

	/* Checked state flips visibility */
	.swap > input:checked ~ .swap-off {
		opacity: 0;
	}
	.swap > input:checked ~ .swap-on {
		opacity: 1;
	}

	/* Rotate effect */
	.swap-rotate .swap-off {
		transform: rotate(0deg) scale(1);
	}
	.swap-rotate .swap-on {
		transform: rotate(-90deg) scale(0.9);
	}
	.swap-rotate > input:checked ~ .swap-off {
		transform: rotate(90deg) scale(0.9);
	}
	.swap-rotate > input:checked ~ .swap-on {
		transform: rotate(0deg) scale(1);
	}

	/* Respect reduced motion */
	@media (prefers-reduced-motion: reduce) {
		.swap .swap-off,
		.swap .swap-on {
			transition: none;
		}
	}
}
/* ===== Swap toggle (Daisy-style) ===== */
@layer components {
	.swap {
		position: relative;
		display: inline-grid;
		place-items: center;
		cursor: pointer;
		line-height: 0; /* prevent baseline shift */
	}

	/* Visually hide checkbox, keep it clickable */
	.swap > input[type="checkbox"] {
		position: absolute;
		inset: 0;
		width: 100%;
		height: 100%;
		opacity: 0;
		appearance: none;
		cursor: pointer;
	}

	/* Stack both icons on top of each other */
	.swap > .swap-on,
	.swap > .swap-off {
		grid-area: 1 / 1;
	}

	/* Base state: show off, hide on */
	.swap .swap-off,
	.swap .swap-on {
		transition: transform 200ms ease, opacity 200ms ease;
		transform-origin: 50% 50%;
	}
	.swap .swap-off {
		opacity: 1;
	}
	.swap .swap-on {
		opacity: 0;
	}

	/* Checked state flips visibility */
	.swap > input:checked ~ .swap-off {
		opacity: 0;
	}
	.swap > input:checked ~ .swap-on {
		opacity: 1;
	}

	/* Rotate effect */
	.swap-rotate .swap-off {
		transform: rotate(0deg) scale(1);
	}
	.swap-rotate .swap-on {
		transform: rotate(-90deg) scale(0.9);
	}
	.swap-rotate > input:checked ~ .swap-off {
		transform: rotate(90deg) scale(0.9);
	}
	.swap-rotate > input:checked ~ .swap-on {
		transform: rotate(0deg) scale(1);
	}

	@media (prefers-reduced-motion: reduce) {
		.swap .swap-off,
		.swap .swap-on {
			transition: none;
		}
	}
}

/* ===================== STRUCTURE OUTSIDE LAYERS ===================== */
/* Hamburger button */
.c-hamburger {
	position: relative;
	display: block;
	width: 24px;
	height: 20px;
	cursor: pointer;
}
.c-hamburger span,
.c-hamburger span::before,
.c-hamburger span::after {
	display: block;
	position: absolute;
	height: 2px;
	width: 100%;
	background: currentColor;
	transition: all 0.3s ease-in-out;
	border-radius: 1px;
}
.c-hamburger span {
	top: 50%;
	transform: translateY(-50%);
}
.c-hamburger span::before {
	content: "";
	top: -8px;
}
.c-hamburger span::after {
	content: "";
	bottom: -8px;
}
.c-hamburger.is-active span {
	background-color: transparent;
}
.c-hamburger.is-active span::before {
	top: 0;
	transform: rotate(45deg);
}
.c-hamburger.is-active span::after {
	bottom: 0;
	transform: rotate(-45deg);
}
